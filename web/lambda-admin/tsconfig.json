{
  "compilerOptions": {
    /* Module解析相关 */

    // 指定ECMAScript目标版本
    "target": "esnext",

    // 指定生成哪个模块系统代码
    "module": "esnext",

    // 决定如何处理模块。
    "moduleResolution": "node",

    "strict": true,
    "skipLibCheck": true,
    // 在.tsx文件里支持JSX
    "jsx": "preserve",
    "sourceMap": true,
    "resolveJsonModule": true,
    "esModuleInterop": true,

    // 解析非相对模块名的基准目录
    "baseUrl": ".",

    // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "allowSyntheticDefaultImports": true,

    // 模块名到基于 baseUrl的路径映射的列表。
    "paths": {
      "/@/*": ["src/*"],
      "/mock/*": ["mock/*"],
      "/server/*": ["server/*"]
    },
    "lib": ["esnext", "dom"],
    "useDefineForClassFields": true
  },
  "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue"],
  "exclude": ["node_modules"],

  // 忽略所有的声明文件（ *.d.ts）的类型检查。
  "skipLibCheck": true
}
